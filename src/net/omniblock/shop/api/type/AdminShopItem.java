package net.omniblock.shop.api.type;

import org.bukkit.Material;

@SuppressWarnings("deprecation")
public enum AdminShopItem {

	
	/*
	 * > Type: Block items
	 */
	STONE(KindItem.BUILDING_BLOCKS, Material.STONE, 20, 10),
	GRANITE(KindItem.BUILDING_BLOCKS, Material.STONE, 1, 20, 15),
	POLISHE_DGRANITE(KindItem.BUILDING_BLOCKS, Material.STONE, 2, 20, 10),
	DIORITE(KindItem.BUILDING_BLOCKS, Material.STONE, 3, 20, 15),
	POLISHED_DIORITE(KindItem.BUILDING_BLOCKS, Material.STONE, 4, 20, 10),
	ANDESITE(KindItem.BUILDING_BLOCKS, Material.STONE, 5, 20, 15),
	POLISHED_ANDESITE(KindItem.BUILDING_BLOCKS, Material.STONE, 6, 20, 10),
	GRASS(KindItem.BUILDING_BLOCKS, Material.GRASS, 20, 10),
	DIRT(KindItem.BUILDING_BLOCKS, Material.DIRT, 20, 10),
	COARSE_DIRT(KindItem.BUILDING_BLOCKS, Material.DIRT, 1, 20, 10),
	PODZOL(KindItem.BUILDING_BLOCKS, Material.DIRT, 2, 20, 10),
	COBBLESTONE(KindItem.BUILDING_BLOCKS, Material.COBBLESTONE, 5, 1),
	WOOD(KindItem.BUILDING_BLOCKS, Material.WOOD, 5, 1),
	SPRUCE_WOOD(KindItem.BUILDING_BLOCKS, Material.WOOD, 1, 5, 1),
	BIRCH_WOOD(KindItem.BUILDING_BLOCKS, Material.WOOD, 2, 5, 1),
	JUNGLE_WOOD(KindItem.BUILDING_BLOCKS, Material.WOOD, 3, 5, 1),
	ACACIA_WOOD(KindItem.BUILDING_BLOCKS, Material.WOOD, 4, 5, 1),
	DARK_WOOD(KindItem.BUILDING_BLOCKS, Material.WOOD, 5, 5, 1),
	SAND(KindItem.BUILDING_BLOCKS, Material.SAND, 5, 1),
	RED_SAND(KindItem.BUILDING_BLOCKS, Material.SAND, 1, 10, 5),
	GRAVEL(KindItem.BUILDING_BLOCKS, Material.GRAVEL, 20, 10),
	GOLD_ORE(KindItem.BUILDING_BLOCKS, Material.GOLD_ORE, 140, 70),
	REDSTONE_ORE(KindItem.BUILDING_BLOCKS, Material.REDSTONE_ORE, 100, 50),
	IRON_ORE(KindItem.BUILDING_BLOCKS, Material.IRON_ORE, 120, 60),
	LAPIS_ORE(KindItem.BUILDING_BLOCKS, Material.LAPIS_ORE, 100, 50),
	COAL_ORE(KindItem.BUILDING_BLOCKS, Material.COAL_ORE, 20, 10),
	EMERALD_ORE(KindItem.BUILDING_BLOCKS, Material.EMERALD_ORE, 300, 150),
	DIAMOND_ORE(KindItem.BUILDING_BLOCKS, Material.DIAMOND_ORE, 180, 90),
	LOG(KindItem.BUILDING_BLOCKS, Material.LOG, 5, 1),
	SPRUCE_LOG(KindItem.BUILDING_BLOCKS, Material.WOOD, 1, 5, 1),
	BIRCH_LOG(KindItem.BUILDING_BLOCKS, Material.WOOD, 2, 5, 1),
	JUNGLE_LOG(KindItem.BUILDING_BLOCKS, Material.WOOD, 3, 10, 5),
	SPONGE(KindItem.BUILDING_BLOCKS, Material.SPONGE, 40, 20),
	WET_SPONGE(KindItem.BUILDING_BLOCKS, Material.SPONGE, 1, 35, 15),
	GLASS(KindItem.BUILDING_BLOCKS, Material.GLASS, 15, 5),
	LAPIS_BLOCK(KindItem.BUILDING_BLOCKS, Material.LAPIS_BLOCK, 270, 135),
	SAND_STONE(KindItem.BUILDING_BLOCKS, Material.SANDSTONE, 40, 20),
	CHISELED_SAND_STONE(KindItem.BUILDING_BLOCKS, Material.SANDSTONE, 1, 40, 20),
	SMOOTH_SAND_STONE(KindItem.BUILDING_BLOCKS, Material.SANDSTONE, 2, 40, 20),
	WHITE_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 20, 10),
	ORANGE_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 1, 20, 10),
	MAGENTA_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 2, 20, 10),
	LIGHT_BLUE_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 3, 20, 10),
	YELLOW_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 4, 20, 10),
	LIME_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 5, 20, 10),
	PINK_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 6, 20, 10),
	GRAY_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 7, 20, 10),
	LIGHT_GRAY_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 8, 20, 10),
	CYAN_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 9, 20, 10),
	PURPLE_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 10, 20, 10),
	BLUE_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 11, 20, 10),
	BROWN_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 12, 20, 10),
	GREEN_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 13, 20, 10),
	RED_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 14, 20, 10),
	BLACK_WOOL(KindItem.BUILDING_BLOCKS, Material.WOOL, 15, 20, 10),
	GOLD_BLOCK(KindItem.BUILDING_BLOCKS, Material.GOLD_BLOCK, 1440, 720),
	IRON_BLOCK(KindItem.BUILDING_BLOCKS, Material.IRON_BLOCK, 1260, 630),
	STONE_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 40, 20),
	SAND_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 1, 40, 20),
	COBBLESTONE_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 3, 40, 20),
	BRICKS_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 4, 40, 20),
	STONE_BRICKS_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 5, 40, 20),
	NETHER_BRICK_SALB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 6, 40, 20),
	QUARTZ_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(44), 7, 40, 20),
	BRICK(KindItem.BUILDING_BLOCKS, Material.BRICK, 60, 30),
	BOOK_SHELF(KindItem.BUILDING_BLOCKS, Material.BOOKSHELF, 80, 40),
	MOSSY_COBBLESTONE(KindItem.BUILDING_BLOCKS, Material.MOSSY_COBBLESTONE, 100, 50),
	OBSIDIAN(KindItem.BUILDING_BLOCKS, Material.OBSIDIAN, 600, 300),
	WOOD_STAIRS(KindItem.BUILDING_BLOCKS, Material.WOOD_STAIRS, 30, 15),
	STONE_STAIRS(KindItem.BUILDING_BLOCKS, Material.COBBLESTONE_STAIRS, 30, 15),
	ICE(KindItem.BUILDING_BLOCKS, Material.ICE, 50, 25),
	SNOW(KindItem.BUILDING_BLOCKS, Material.SNOW, 60, 30),
	CLAY(KindItem.BUILDING_BLOCKS, Material.CLAY, 50, 25),
	PUMPKIN(KindItem.BUILDING_BLOCKS, Material.PUMPKIN, 200, 100),
	NETHER_RACK(KindItem.BUILDING_BLOCKS, Material.NETHERRACK, 20, 10),
	SOUL_SAND(KindItem.BUILDING_BLOCKS, Material.SOUL_SAND, 140, 70),
	GLOWSTONE(KindItem.BUILDING_BLOCKS, Material.GLOWSTONE, 50, 25),
	LIT_PUMPKIN(KindItem.BUILDING_BLOCKS, Material.getMaterial(91), 210, 100),
	WHITE_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 25, 10),
	ORANGE_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 1, 25, 10),
	MAGENTA_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 2, 25, 10),
	LIGHT_BLUE_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 3, 25, 10),
	YELLOW_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 4, 25, 10),
	LIME_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 5, 25, 10),
	PINK_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 6, 25, 10),
	GRAY_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 7, 25, 10),
	LIGHT_GRAY_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 8, 25, 10),
	CYAN_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 9, 25, 10),
	PURPLE_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 10, 25, 10),
	BLUE_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 11, 25, 10),
	BROWN_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 12, 25, 10),
	GREEN_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 13, 25, 10),
	RED_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 14, 25, 10),
	BLACK_GLASS(KindItem.BUILDING_BLOCKS, Material.STAINED_GLASS, 15, 25, 10),
	STONE_BRICKS(KindItem.BUILDING_BLOCKS, Material.BRICK, 80, 40),
	MOSSY_BRICKS(KindItem.BUILDING_BLOCKS, Material.BRICK, 1, 80, 40),
	CRACKED_BRICKS(KindItem.BUILDING_BLOCKS, Material.BRICK, 2, 80, 40),
	CHISELED_BRICKS(KindItem.BUILDING_BLOCKS, Material.BRICK, 3, 80, 40),
	MELON_BLOCK(KindItem.BUILDING_BLOCKS, Material.MELON_BLOCK, 400, 200),
	BRICK_STAIRS(KindItem.BUILDING_BLOCKS, Material.BRICK_STAIRS, 30, 15),
	STONE_BRICK_STAIRS(KindItem.BUILDING_BLOCKS, Material.BRICK_STAIRS, 30,15),
	MYCELIUM(KindItem.BUILDING_BLOCKS, Material.getMaterial(110), 600, 300),
	NETHER_BRICK(KindItem.BUILDING_BLOCKS, Material.NETHER_BRICK, 100, 50),
	NETHER_BRICK_STAIRS(KindItem.BUILDING_BLOCKS, Material.NETHER_BRICK_STAIRS, 30, 15),
	END_STONE(KindItem.BUILDING_BLOCKS, Material.ENDER_STONE, 20, 10),
	WOOD_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(126), 35, 15),
	SPRUCE_WOOD_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(126), 1, 35, 15),
	BIRCH_WOOD_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(126), 2, 35, 15),
	JUNGLE_WOOD_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(126), 3, 35, 15),
	ACACIA_WOOD_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(126), 4, 35, 15),
	DARK_WOOD_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(126), 5, 35, 15),
	SANDSTONE_STAIRS(KindItem.BUILDING_BLOCKS, Material.SANDSTONE_STAIRS, 35, 15),
	EMERALD_BLOCK(KindItem.BUILDING_BLOCKS, Material.EMERALD_BLOCK, 2700, 1350),
	SPRUCE_WOOD_STAIRS(KindItem.BUILDING_BLOCKS, Material.SPRUCE_WOOD_STAIRS, 35, 15),
	BRICH_WOOD_STAIRS(KindItem.BUILDING_BLOCKS, Material.BIRCH_WOOD_STAIRS, 35, 15),
	JUNGÑA_WOOD_STAIRS(KindItem.BUILDING_BLOCKS, Material.JUNGLE_WOOD_STAIRS, 35, 15),
	QUARTZ_ORE(KindItem.BUILDING_BLOCKS, Material.QUARTZ_ORE, 100, 50),
	QUARTZ_BLOCK(KindItem.BUILDING_BLOCKS, Material.QUARTZ_BLOCK, 400, 200),
	CHISELED_QUARTZ_BLOCK(KindItem.BUILDING_BLOCKS, Material.QUARTZ_BLOCK, 1, 400, 200),
	PILLAR_QUARTZ_BLOCK(KindItem.BUILDING_BLOCKS, Material.QUARTZ_BLOCK,2, 400, 200),
	QUARTZ_STAIRS(KindItem.BUILDING_BLOCKS, Material.QUARTZ_STAIRS, 35, 15),
	WHITE_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 50, 25),
	ORANGE_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 1, 50, 25),
	MAGENTA_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 2, 50, 25),
	LIGHT_BLUE_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 3, 50, 25),
	YELLOW_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 4, 50, 25),
	LIME_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 5, 50, 25),
	PINK_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 6, 50, 25),
	GRAY_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 7, 50, 25),
	LIGHT_GRAY_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 8, 50, 25),
	CYAN_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 9, 50, 25),
	PURPLE_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 10, 50, 25),
	BLUE_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 11, 50, 25),
	BROWN_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 12, 50, 25),
	GREEN_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 13, 50, 25),
	RED_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 14, 50, 25),
	BLACK_CLAY(KindItem.BUILDING_BLOCKS, Material.STAINED_CLAY, 15, 50, 25),
	ACACIA_LOG2(KindItem.BUILDING_BLOCKS, Material.LOG_2, 5, 1),
	DARK_LOG2(KindItem.BUILDING_BLOCKS, Material.LOG_2, 1, 5, 1),
	ACACIA_WOOD_STAIRS(KindItem.BUILDING_BLOCKS, Material.ACACIA_STAIRS, 35, 15),
	DARK_WOOD_STAIRS(KindItem.BUILDING_BLOCKS, Material.DARK_OAK_STAIRS, 35, 15),
	PRISMARINE(KindItem.BUILDING_BLOCKS, Material.PRISMARINE, 400, 200),
	PRISMARINE_BRICKS(KindItem.BUILDING_BLOCKS, Material.PRISMARINE, 1, 400, 200),
	DARK_PRISMARINE(KindItem.BUILDING_BLOCKS, Material.PRISMARINE, 2, 400, 200),
	SEA_LANTERN(KindItem.BUILDING_BLOCKS, Material.SEA_LANTERN, 400, 200),
	HAY_BLOCK(KindItem.BUILDING_BLOCKS, Material.HAY_BLOCK, 100, 500),
	HARDENED_CLAY(KindItem.BUILDING_BLOCKS, Material.HARD_CLAY, 50, 25),
	COAL_BLOCK(KindItem.BUILDING_BLOCKS, Material.COAL_BLOCK, 180, 90),
	PACKED_ICE(KindItem.BUILDING_BLOCKS, Material.PACKED_ICE, 80, 40),
	RED_SANDSTONE(KindItem.BUILDING_BLOCKS, Material.RED_SANDSTONE, 20, 10),
	CHISELED_RED_SANDSTONE(KindItem.BUILDING_BLOCKS, Material.RED_SANDSTONE, 1, 20, 10),
	SMOOTH_RED_SANDSTONE(KindItem.BUILDING_BLOCKS, Material.RED_SANDSTONE, 2, 20, 10),
	RED_SANDSTONE_STAIRS(KindItem.BUILDING_BLOCKS, Material.RED_SANDSTONE_STAIRS, 35, 15),
	RED_SANDSTONE_SLAB(KindItem.BUILDING_BLOCKS, Material.getMaterial(182), 35, 15),
	PURPUR_BLOCK(KindItem.BUILDING_BLOCKS, Material.PURPUR_BLOCK, 100, 50),
	PURPUR_PILLAR(KindItem.BUILDING_BLOCKS, Material.PURPUR_PILLAR, 100, 500),
	PURPUR_STAIRS(KindItem.BUILDING_BLOCKS, Material.PURPUR_STAIRS, 35, 15),
	PURPUR_SLAB(KindItem.BUILDING_BLOCKS, Material.PURPUR_SLAB, 35, 15),
	END_BRICKS(KindItem.BUILDING_BLOCKS, Material.END_BRICKS, 100, 50),
	MAGMA_BLOCK(KindItem.BUILDING_BLOCKS, Material.MAGMA, 100, 50),
	NETHER_WART_BLOCK(KindItem.BUILDING_BLOCKS, Material.NETHER_WART_BLOCK, 100, 50),
	RED_NETHER_BRICK(KindItem.BUILDING_BLOCKS, Material.RED_NETHER_BRICK, 100, 50),
	BONE_BLOCK(KindItem.BUILDING_BLOCKS, Material.BONE_BLOCK, 50, 25),
	WHITE_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 20, 10),
	ORANGE_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 1, 20, 10),
	MAGENTA_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 2, 20, 10),
	LIGHT_BLUE_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 3, 20, 10),
	YELLOW_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 4, 20, 10),
	LIME_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 5, 20, 10),
	PINK_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 6, 20, 10),
	GRAY_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 7, 20, 10),
	LIGHT_GRAY_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 8, 20, 10),
	CYAN_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 9, 20, 10),
	PURPLE_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 10, 20, 10),
	BLUE_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 11, 20, 10),
	BROWN_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 12, 20, 10),
	GREEN_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 13, 20, 10),
	RED_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 14, 20, 10),
	BLACK_CONCRETE(KindItem.BUILDING_BLOCKS, Material.CONCRETE, 15, 20, 10),
	WHITE_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 20, 10),
	ORANGE_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 1, 20, 10),
	MAGENTA_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 2, 20, 10),
	LIGHT_BLUE_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 3, 20, 10),
	YELLOW_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 4, 20, 10),
	LIME_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 5, 20, 10),
	PINK_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 6, 20, 10),
	GRAY_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 7, 20, 10),
	LIGHT_GRAY_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 8, 20, 10),
	CYAN_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 9, 20, 10),
	PURPLE_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 10, 20, 10),
	BLUE_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 11, 20, 10),
	BROWN_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 12, 20, 10),
	GREEN_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 13, 20, 10),
	RED_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 14, 20, 10),
	BLACK_CONCRETE_POWDER(KindItem.BUILDING_BLOCKS, Material.CONCRETE_POWDER, 15, 20, 10),
	
	/*
	 * > Type: Food items
	 */
	APPLE(KindItem.FOODSTUFFS, Material.APPLE, 20, 10),
	MUSHROOM_SOUP(KindItem.FOODSTUFFS, Material.MUSHROOM_SOUP, 40, 20),
	BREAD(KindItem.FOODSTUFFS, Material.BREAD, 20, 10),
	RAW_BEEF(KindItem.FOODSTUFFS, Material.RAW_BEEF, 5, 1),
	COOKED_BEEF(KindItem.FOODSTUFFS, Material.COOKED_BEEF, 25, 10),
	GOLDEN_APPLE(KindItem.FOODSTUFFS, Material.GOLDEN_APPLE, 1280, 640),
	BLOCK_APPLE(KindItem.FOODSTUFFS, Material.GOLDEN_APPLE, 11520, 5760),
	RAW_FISH(KindItem.FOODSTUFFS, Material.RAW_FISH, 5, 1),
	RAW_SALMON(KindItem.FOODSTUFFS, Material.RAW_FISH, 1, 20, 10),
	CLOWN_FISH(KindItem.FOODSTUFFS, Material.RAW_FISH, 2, 20, 10),
	PUFFER_FISH(KindItem.FOODSTUFFS, Material.RAW_FISH, 3 , 20, 10),
	COOKED_FISH(KindItem.FOODSTUFFS, Material.COOKED_FISH, 25, 10),
	COOKED_SALMON(KindItem.FOODSTUFFS, Material.COOKED_FISH, 1, 25, 10),
	CAKE(KindItem.FOODSTUFFS, Material.CAKE, 20, 10),
	COOKIE(KindItem.FOODSTUFFS, Material.COOKIE, 10, 5),
	MELON(KindItem.FOODSTUFFS, Material.MELON, 100, 50),
	RAW_CHICKEN(KindItem.FOODSTUFFS, Material.RAW_CHICKEN, 5, 1),
	COOKED_CHICKEN(KindItem.FOODSTUFFS, Material.COOKED_CHICKEN, 15, 5),
	ROTTEN_FLESH(KindItem.FOODSTUFFS, Material.ROTTEN_FLESH, 5, 1),
	SPIDER_EYE(KindItem.FOODSTUFFS, Material.SPIDER_EYE, 5, 1),
	CARROT(KindItem.FOODSTUFFS, Material.CARROT, 20, 10),
	POTATO(KindItem.FOODSTUFFS, Material.POTATO, 20, 10),
	BAKED_POTATO(KindItem.FOODSTUFFS, Material.BAKED_POTATO, 10, 5),
	POISONOUS_POTATO(KindItem.FOODSTUFFS, Material.POISONOUS_POTATO, 5, 1),
	PUMPKIN_PIE(KindItem.FOODSTUFFS, Material.PUMPKIN_PIE, 25, 10),
	RABBIT(KindItem.FOODSTUFFS, Material.RABBIT, 5, 1),
	COOKED_RABBIT(KindItem.FOODSTUFFS, Material.COOKED_RABBIT, 25, 10),
	RABBIT_STEW(KindItem.FOODSTUFFS, Material.RABBIT_STEW, 25, 10),
	MUTTON(KindItem.FOODSTUFFS, Material.MUTTON, 5, 1),
	COOKED_MUTTON(KindItem.FOODSTUFFS, Material.COOKED_MUTTON, 15, 5),
	BEETROOT(KindItem.FOODSTUFFS, Material.BEETROOT, 10, 5),
	BEETROOT_SOUP(KindItem.FOODSTUFFS, Material.BEETROOT_SOUP, 20, 10),
	;
	
	
	public KindItem getKind() {
		return kind;
	}

	public void setKind(KindItem kind) {
		this.kind = kind;
	}

	private Material material;
	private int data;
	private int priceBuy;
	private int priceSell;
	
	private KindItem kind;
	
	/**
	 * AdminShopItem > Contiene todos los items que manejara la tienda del survival
	 * 
	 * @param kind
	 *            Tipo de item que se esta usando
	 * @param material
	 *            Material del item
	 * @param data
	 * 			  SubId del item.
	 * @param priceBuy
	 *            Costo que tendra el item
	 * @param priceSell
	 *            Dinero que se obtiene al vender el ítem
	 * 
	 */
	AdminShopItem(KindItem kind, Material material, int priceBuy, int priceSell){
		
		this.kind = kind;
		
		this.material = material;
		this.data = 0;
		this.priceBuy = priceBuy;
		this.priceSell = priceSell;
		
	}
	
	AdminShopItem(KindItem kind, Material material, int data, int priceBuy, int priceSell){
		
		this.kind = kind;
		
		this.material = material;
		this.data = data;
		this.priceBuy = priceBuy;
		this.priceSell = priceSell;
		
	}
	
	public int getData() {
		return data;
	}

	public void setData(int data) {
		this.data = data;
	}

	public int getPriceBuy() {
		return priceBuy;
	}

	public void setPriceBuy(int priceBuy) {
		this.priceBuy = priceBuy;
	}

	public int getPriceSell() {
		return priceSell;
	}

	public void setPriceSell(int priceSell) {
		this.priceSell = priceSell;
	}

	public Material getMaterial() {
		return material;
	}

	public void setMaterial(Material material) {
		this.material = material;
	}
}
